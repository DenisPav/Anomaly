// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Tenancy.Db;

namespace Tenancy.Db.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20181227213345_seedUsers")]
    partial class seedUsers
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.4-rtm-31024")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Tenancy.Models.Tenant", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Host")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("Tenants");

                    b.HasData(
                        new { Id = 1, Host = "localhost:5000" },
                        new { Id = 2, Host = "localhost:5001" }
                    );
                });

            modelBuilder.Entity("Tenancy.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email");

                    b.Property<int>("TenantId");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique()
                        .HasFilter("[Email] IS NOT NULL");

                    b.HasIndex("TenantId");

                    b.ToTable("Users");

                    b.HasData(
                        new { Id = 1, Email = "Bailee.Johns83@yahoo.com", TenantId = 1 },
                        new { Id = 2, Email = "Dejah72@yahoo.com", TenantId = 2 },
                        new { Id = 3, Email = "Florence46@yahoo.com", TenantId = 1 },
                        new { Id = 4, Email = "Lauren.Mertz8@hotmail.com", TenantId = 2 },
                        new { Id = 5, Email = "Donavon_Orn10@gmail.com", TenantId = 1 }
                    );
                });

            modelBuilder.Entity("Tenancy.Models.User", b =>
                {
                    b.HasOne("Tenancy.Models.Tenant", "Tenant")
                        .WithMany()
                        .HasForeignKey("TenantId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
